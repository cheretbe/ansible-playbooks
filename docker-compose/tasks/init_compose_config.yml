---

- name: Write env variables file
  ansible.builtin.template:
    src: "env.j2"
    dest: "/opt/docker-configs/{{ docker_compose_config_to_init.key }}/.env"
    owner: root
    group: root
    mode: '0644'
  become: true
  when: docker_compose_config_to_init.value.env_variables is defined
  register: __dc_env_result

- name: Write local settings file
  ansible.builtin.copy:
    dest: "/opt/docker-configs/{{ docker_compose_config_to_init.key }}/docker-compose.local.yml"
    content: "{{ docker_compose_config_to_init.value.local_settings | to_nice_yaml(indent=2) }}"
    mode: "0644"
    owner: root
    group: root
  become: true
  when: docker_compose_config_to_init.value.local_settings is defined
  register: __dc_local_settings_result

- name: Get local settings file info
  ansible.builtin.stat:
    path: "/opt/docker-configs/{{ docker_compose_config_to_init.key }}/docker-compose.local.yml"
  register: dc_local_settings_file

- name: Construct docker compose command
  ansible.builtin.set_fact:
    dc_compose_command: "docker compose -f docker-compose.yml{{ ' -f docker-compose.local.yml' if dc_local_settings_file.stat.exists else '' }}"

- name: Get current config
  ansible.builtin.command:
    cmd: "{{ dc_compose_command }} config --format json"
    chdir: "/opt/docker-configs/{{ docker_compose_config_to_init.key }}"
  become: true
  register: __dc_current_config
  changed_when: false

# NOTE: Here we list all containers, not only running ones. And later just check
#       that some state is present, not necessarily "running". This is because
#       a config may use "restart: unless-stopped" setting and containers may
#       be down for a reason.
#       Also we don't track config files changes to recreate containers on config
#       because:
#       - this is a potentially destructive action and may require prior data backup;
#       - image version upgrade may require some manual actions;
- name: List existing containers
  ansible.builtin.command:
    cmd: "{{ dc_compose_command }} ps -a --format json"
    chdir: "/opt/docker-configs/{{ docker_compose_config_to_init.key }}"
  become: true
  register: __dc_containers
  changed_when: false

- name: Check if all services exist
  ansible.builtin.set_fact:
    dc_all_services_exist: false
  when: not ((__dc_containers.stdout | from_json | json_query(_dc_test_query))[0].State | default(False))
  vars:
    _dc_test_query: "[?Service=='{{ _dc_service }}']"
  loop: "{{ (__dc_current_config.stdout | from_json).services.keys() }}"
  loop_control:
    loop_var: _dc_service

- name: Create and run containers
  ansible.builtin.command:
    cmd: "{{ dc_compose_command }} up -d"
    chdir: "/opt/docker-configs/{{ docker_compose_config_to_init.key }}"
  become: true
  when: not dc_all_services_exist

- name: Write current config
  when: __dc_env_result.changed or __dc_local_settings_result.changed
  block:
    - name: Make local data directory exists
      ansible.builtin.file:
        path: "/opt/docker-configs/{{ docker_compose_config_to_init.key }}/local-data"
        state: directory
        mode: "0755"
        owner: root
        group: root
      become: true

    # It would have been better to save JSON config, that we already have in
    # __dc_current_config variable, using copy module rather than frowned upon shell.
    # But strangely it appears to lose newline ans space characters when
    # using 'content' with a variable.
    # TODO: review and debug this when time permits
    #
    # - name: Write current config file
    #   ansible.builtin.copy:
    #     dest: "/opt/docker-configs/{{ docker_compose_config_to_init.key }}/local-data/config_{{ '%Y-%m-%d_%H-%M' | strftime }}.json"
    #     # content: "{{ __dc_current_config.stdout | join('\\n') }}"
    #     # content: "{{ __dc_current_config.stdout_lines | join('\n') }}"
    #     content: |
    #       {{ __dc_current_config.stdout }}
    #     mode: "0644"
    #     owner: root
    #     group: root
    #   become: true

    - name: Write current config file
      ansible.builtin.shell: |
        {{ dc_compose_command }} config > local-data/config_{{ '%Y-%m-%d_%H-%M' | strftime }}.txt
      args:
        chdir: "/opt/docker-configs/{{ docker_compose_config_to_init.key }}"
      become: true
