require "yaml"
require (File.dirname(__FILE__) + "/../common/common")

if not ENV.has_key?("AO_DEFAULT_VAGRANT_PASSWORD") then
  abort "ERROR: AO_DEFAULT_VAGRANT_PASSWORD environment variable is not defined"
end

win_password = "#{ENV['AO_DEFAULT_VAGRANT_PASSWORD']}"
required_plugins = %w(vagrant-vbguest)

plugins_to_install = required_plugins.select { |plugin| not Vagrant.has_plugin? plugin }
if not plugins_to_install.empty?
  puts "This Vagrantfile needs one or more additional plugins to be installed: #{plugins_to_install.join(', ')}"
  puts "Use the following command:\n\n"
  puts "vagrant plugin install #{plugins_to_install.join(' ')}\n\n"
  abort "Installation of one or more additional plugins needed. Aborting."
end

use_awx = false
awx_version = ""
docker_mirror_param = ""
ansible_vm_memory = "4096"
ansible_vm_cpus = "1"
package_cache_host = ""
if File.file?("local-config.yml")
  local_config = YAML.load_file("local-config.yml")
  unless local_config.nil?
    use_awx = local_config.fetch("use_awx", use_awx)
    awx_version = local_config.fetch("awx_version", awx_version)
    docker_mirror_param = local_config.fetch("docker_mirror", "")
    unless docker_mirror_param.empty?
      docker_mirror_param = "--docker-mirror " + docker_mirror_param
    end
    ansible_vm_memory = local_config.fetch("ansible_vm_memory", ansible_vm_memory)
    ansible_vm_cpus = local_config.fetch("ansible_vm_cpus", ansible_vm_cpus)
    package_cache_host = local_config.fetch("package_cache_host", package_cache_host)
  end
end

Vagrant.configure("2") do |config|
  config.vm.define :ansible do |ansible|
    ansible.vm.box = "cheretbe/ansible-controller"
    ansible.vm.provider "virtualbox" do |vb|
      vb.memory = ansible_vm_memory
      vb.cpus = ansible_vm_cpus
      vb.customize ["modifyvm", :id, "--groups", "/__vagrant"]
      # prevent 'ubuntu-xenial-16.04-cloudimg-console.log' file creation
      vb.customize [ "modifyvm", :id, "--uartmode1", "file", File::NULL ]
      # vb.customize ["modifyvm", :id, "--audio", "pulse", "--audiocontroller", "ac97"]
      # vb.customize ["modifyvm", :id, "--audio", "pulse", "--audiocontroller", "hda"]
    end

    ansible.vm.hostname = "ansible-vm"
    ansible.vm.network "forwarded_port", guest: 80, host: 8080
    ansible.vm.network "private_network", ip: "172.24.0.10", virtualbox__intnet: "vagrant-intnet"

    ansible.vm.synced_folder "../../../", "/ansible-playbooks"
    ansible.vm.synced_folder Dir.home, "/host_home"

    set_local_package_cache_host(ansible, package_cache_host)

    ansible.vm.provision "shell",
      name: "PIP packages installation",
      keep_color: true, privileged: true,
      inline: "pip3 install -r /ansible-playbooks/dev_requirements.txt"

    ansible.vm.provision "shell",
      name: "Ansible configuration",
      keep_color: true, privileged: false,
      inline: <<-SHELL
        set -e

        echo "Copying config file"
        cp /vagrant/provision/ansible.cfg /home/vagrant/.ansible.cfg

        echo "Configuring SSH"
        chmod 700 /home/vagrant/.ssh
        mkdir -p /home/vagrant/.ssh
        cp /vagrant/provision/id_rsa /home/vagrant/.ssh/id_rsa
        chmod 600 /home/vagrant/.ssh/id_rsa
        cp /vagrant/provision/id_rsa.pub /home/vagrant/.ssh/id_rsa.pub

        echo "Setting AO_DEFAULT_VAGRANT_PASSWORD env variable"
        sudo sh -c 'echo "export AO_DEFAULT_VAGRANT_PASSWORD=#{win_password}" > /etc/profile.d/test_settings.sh'
      SHELL

    if use_awx then
      ansible.vm.provision "shell", name: "AWX installation",
        keep_color: true, privileged: false,
        inline: <<-SHELL
          /ansible-playbooks/tools/awx/install_awx.py --batch-mode \\
            #{awx_version} #{docker_mirror_param} \\
            --project-data-folder /opt && \\
          /ansible-playbooks/tools/debug/configure_tower_cli.sh && \\
          /ansible-playbooks/tools/debug/set_test_config.sh
        SHELL
    end
  end

  config.vm.define :"ubuntu-focal", autostart: false do |ubuntu_focal|
    ubuntu_focal.vm.box = "ubuntu/focal64"
    ubuntu_focal.vm.provider "virtualbox" do |vb|
      vb.memory = "1024"
      vb.customize ["modifyvm", :id, "--groups", "/__vagrant"]
    end
    ubuntu_focal.vm.hostname = "ubuntu-focal"
    ubuntu_focal.vm.network "private_network", ip: "172.24.0.11", virtualbox__intnet: "vagrant-intnet"

    ubuntu_focal.vm.provision "shell", name: "SSH configuration",
      keep_color: true, privileged: false,
      inline: <<-SHELL
        set -e
        python3 /vagrant/provision/setup_host.py
      SHELL
  end

  config.vm.define :"ubuntu-bionic", autostart: false do |ubuntu_bionic|
    ubuntu_bionic.vm.box = "ubuntu/bionic64"
    ubuntu_bionic.vm.provider "virtualbox" do |vb|
      vb.memory = "1024"
      vb.customize ["modifyvm", :id, "--groups", "/__vagrant"]
      # prevent 'ubuntu-xenial-16.04-cloudimg-console.log' file creation
      vb.customize [ "modifyvm", :id, "--uartmode1", "file", File::NULL ]
    end
    ubuntu_bionic.vm.hostname = "ubuntu-bionic"
    ubuntu_bionic.vm.network "private_network", ip: "172.24.0.12", virtualbox__intnet: "vagrant-intnet"

    ubuntu_bionic.vm.provision "shell", name: "SSH configuration",
      keep_color: true, privileged: false,
      inline: <<-SHELL
        set -e
        python3 /vagrant/provision/setup_host.py
      SHELL
  end

  config.vm.define :"ubuntu-xenial", autostart: false do |ubuntu_xenial|
    ubuntu_xenial.vm.box = "ubuntu/xenial64"
    ubuntu_xenial.vm.provider "virtualbox" do |vb|
      vb.memory = "1024"
      vb.customize ["modifyvm", :id, "--groups", "/__vagrant"]
      # prevent 'ubuntu-xenial-16.04-cloudimg-console.log' file creation
      vb.customize [ "modifyvm", :id, "--uartmode1", "file", File::NULL ]
    end
    ubuntu_xenial.vm.hostname = "ubuntu-xenial"
    ubuntu_xenial.vm.network "private_network", ip: "172.24.0.13", virtualbox__intnet: "vagrant-intnet"

    ubuntu_xenial.vm.provision "shell", name: "SSH configuration",
      keep_color: true, privileged: false,
      inline: <<-SHELL
        set -e
        python3 /vagrant/provision/setup_host.py
      SHELL
  end

  config.vm.define :"centos-7", autostart: false do |centos_7|
    centos_7.vm.box = "centos/7"
    centos_7.vm.provider "virtualbox" do |vb|
      vb.memory = "1024"
      vb.customize ["modifyvm", :id, "--groups", "/__vagrant"]
    end

    centos_7.vbguest.auto_update = true
    centos_7.vbguest.installer_options = { allow_kernel_upgrade: true }

    centos_7.vm.hostname = "centos-7"
    centos_7.vm.network "private_network", ip: "172.24.0.14", virtualbox__intnet: "vagrant-intnet"

    centos_7.vm.provision "shell", name: "SSH configuration",
      keep_color: true, privileged: false,
      inline: <<-SHELL
        set -e
        sudo yum install -y python3
        python3 /vagrant/provision/setup_host.py
      SHELL
  end

  config.vm.define :"centos-8", autostart: false do |centos_8|
    centos_8.vm.box = "centos/8"
    centos_8.vm.provider "virtualbox" do |vb|
      vb.memory = "1024"
      vb.customize ["modifyvm", :id, "--groups", "/__vagrant"]
    end

    centos_8.vbguest.auto_update = true
    # centos_8.vbguest.installer_options = {enablerepo: true}
    centos_8.vbguest.installer_options = { allow_kernel_upgrade: true }

    centos_8.vm.hostname = "centos-8"
    centos_8.vm.network "private_network", ip: "172.24.0.15", virtualbox__intnet: "vagrant-intnet"

    centos_8.vm.provision "shell", name: "SSH configuration",
      keep_color: true, privileged: false,
      inline: <<-SHELL
        set -e
        sudo dnf install -y python3
        python3 /vagrant/provision/setup_host.py
      SHELL
  end

  config.vm.define :win10, autostart: false do |win10|
    win10.vm.box = "cheretbe/win10ltsc2019_ru_64"
    win10.winrm.username = "vagrant"
    win10.winrm.password = "#{ENV['AO_DEFAULT_VAGRANT_PASSWORD']}"
    win10.vm.boot_timeout = 600
    win10.vm.hostname = "win10"
    win10.vm.provider "virtualbox" do |vb|
      vb.memory = "4096"
      vb.customize ["modifyvm", :id, "--groups", "/__vagrant"]
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
    end
    win10.vm.network "private_network", ip: "172.24.0.16", virtualbox__intnet: "vagrant-intnet"
    # win7.vm.provision "shell", path: "provision-script.ps1"
  end

end