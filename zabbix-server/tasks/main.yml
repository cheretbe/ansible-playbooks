---
# tasks file for zabbix-server

- name: Check distribution
  fail:
    msg: "Only Ubuntu 18.04 and 16.04 are supported at the moment"
  when: not (ansible_distribution == "Ubuntu" and (ansible_distribution_release == "bionic" or ansible_distribution_release == "xenial"))

- name: Add Zabbix repository key
  apt_key:
    url: http://repo.zabbix.com/zabbix-official-repo.key
    state: present

- name: Add Zabbix repository
  apt_repository:
    repo: deb http://repo.zabbix.com/zabbix/{{ zabbix_server_version }}/ubuntu {{ ansible_distribution_release }} main
    state: present

- name: Add Zabbix repository (sources)
  apt_repository:
    repo: deb-src http://repo.zabbix.com/zabbix/{{ zabbix_server_version }}/ubuntu {{ ansible_distribution_release }} main
    state: present

- name: Update and upgrade apt packages
  become: yes
  apt:
    upgrade: "yes"
    update_cache: yes
    # Fix for warning message "Could not find aptitude. Using apt-get instead"
    force_apt_get: yes

- name: Install needed packages
  apt:
    name:  ["apache2", "libapache2-mod-php", "php", "php-pear", "php-cgi",
            "php-common", "libapache2-mod-php", "php-mbstring", "php-net-socket",
            "php-gd", "php-mysql", "php-gettext", "php-bcmath", "mariadb-server",
            "python3-pip",

            "zabbix-server-mysql", "zabbix-frontend-php", "zabbix-agent",
            "zabbix-get"]
    # Fix for warning message "Could not find aptitude. Using apt-get instead"
    force_apt_get: yes
    update_cache: no

# The following will not work on CentOS
# https://stackoverflow.com/questions/12521114/getting-the-canonical-time-zone-name-in-shell-script
- name: Get current timezone
  shell: cat /etc/timezone
  changed_when: false
  register: zabbix_server_timezone

- name: Config timezone for PHP
  ini_file:
    path: "{{ zabbix_server_apache2_php_ini_path[ansible_distribution_release] }}"
    section: Date
    option: date.timezone
    value: "{{ zabbix_server_timezone.stdout_lines[0] }}"
    backup: True

- name: Write custom '/etc/zabbix/apache.conf'
  template:
    src: apache.conf.j2
    dest: /etc/zabbix/apache.conf
    owner: root
    group: root
    mode: 0644
  register: zabbix_server_apache_conf

- name: Reload apache2 config
  systemd:
    name: apache2
    state: reloaded
  when: zabbix_server_apache_conf.changed

- name: Install Python PyMySQL package
  pip:
    name: PyMySQL

- name: "Create MySQL database '{{ zabbix_server_db_name }}'"
  mysql_db:
    name: "{{ zabbix_server_db_name }}"
    state: present
    encoding: utf8
    collation: utf8_bin
    login_unix_socket: /var/run/mysqld/mysqld.sock
  register: zabbix_server_db_create

- name: "Grant access to '{{ zabbix_server_db_user }}' on '{{ zabbix_server_db_name }}'"
  mysql_user:
    name: "{{ zabbix_server_db_user }}"
    host: localhost
    password: "{{ zabbix_server_db_password }}"
    priv: "{{ zabbix_server_db_name }}.*:ALL"
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: Create Zabbix DB structure
  shell:  "/bin/zcat /usr/share/doc/zabbix-server-mysql/create.sql.gz | /usr/bin/mysql -u {{ zabbix_server_db_user }} -p{{ zabbix_server_db_password }} {{ zabbix_server_db_name }}"
  when: zabbix_server_db_create.changed

- name: Write custom '/etc/zabbix/zabbix_server.conf'
  template:
    src: zabbix_server.conf.j2
    dest: /etc/zabbix/zabbix_server.conf
    owner: root
    group: root
    mode: 0644
  register: zabbix_server_conf

- name: Auto-finish GUI configuration wizard
  template:
    src: zabbix.conf.php.j2
    dest: /etc/zabbix/web/zabbix.conf.php
    owner: www-data
    group: www-data
    mode: 0644
  register: zabbix_server_gui
  when: zabbix_server_finish_gui_wizard

- name: Restart 'zabbix-server' service
  systemd:
    name: zabbix-server
    state: restarted
  when: zabbix_server_conf.changed or zabbix_server_gui.changed

- name: Enable and start 'zabbix-server' service
  systemd:
    name: zabbix-server
    state: started
    enabled: yes

- name: Enable and start 'zabbix-agent' service
  systemd:
    name: zabbix-agent
    state: started
    enabled: yes