---

- name: Check if mandatory variables are defined
  assert:
    that:
      - purevpn_ovpn_client_server is defined
      - purevpn_ovpn_client_user is defined
      - purevpn_ovpn_client_password is defined

- name: Make sure '/etc/systemd/resolved.conf.d' directory exists
  file:
    path: /etc/systemd/resolved.conf.d
    state: directory
    mode: 0755
    owner: root
    group: root
  become: true

- name: Disable systemd-resolved DNS stub
  copy:
    content: |
      # Generated by Ansible at {{ lookup('pipe', 'hostname -f') }}
      # Any changes made here will be overwritten
      [Resolve]
      DNSStubListener=no
    dest: /etc/systemd/resolved.conf.d/10-disable-dns-stub.conf
    mode: 0644
  become: true
  register: systemd_resolved_stub_info

- name: Get information on '/etc/resolv.conf' file
  ansible.builtin.stat:
    path: /etc/resolv.conf
  register: resolv_conf_info

- name: "Update '/etc/resolv.conf' symlink"
  file:
    src: "/run/systemd/resolve/resolv.conf"
    dest: "/etc/resolv.conf"
    state: link
  when: >-
    resolv_conf_info.stat.islnk
    and
    resolv_conf_info.stat.lnk_source == "/run/systemd/resolve/stub-resolv.conf"
  become: true

  # Notification handler won't do: we need working DNS during dnsmasq installation
- name: Restart systemd-resolved service
  service:
    name: systemd-resolved.service
    state: restarted
  become: true
  when: systemd_resolved_stub_info.changed

- name: Add Speedtest repository key
  apt_key:
    url: https://packagecloud.io/ookla/speedtest-cli/gpgkey
    state: present
  become: yes

- name: Add Speedtest repository
  apt_repository:
    repo: deb https://packagecloud.io/ookla/speedtest-cli/ubuntu/ {{ ansible_distribution_release }} main
    state: present
  become: yes

- name: Install apt packages
  apt:
    name: [
      "netfilter-persistent", "dnsmasq", "openvpn", "putty-tools", "speedtest"
    ]
    update_cache: yes
    # # 1 hour
    cache_valid_time: 3600
  become: yes

- name: Create Purevpn OpenVPN config
  ansible.builtin.template:
    src: purevpn.conf.j2
    dest: /etc/openvpn/client/purevpn.conf
    owner: root
    group: root
    mode: '0644'
  become: yes
  notify: Restart 'openvpn-client@purevpn' service

- name: Create Purevpn user credentials file
  ansible.builtin.copy:
    content: |-
      {{ purevpn_ovpn_client_user }}
      {{ purevpn_ovpn_client_password }}
    dest: /etc/openvpn/client/purevpn_credentials
    owner: root
    group: root
    mode: '0600'
  become: yes
  notify: Restart 'openvpn-client@purevpn' service

- name: Copy resolv.conf update script
  ansible.builtin.copy:
    src: update_resolve_conf.py
    dest: /etc/openvpn/client/update_resolve_conf.py
    owner: root
    group: root
    mode: '0755'
  become: yes

- name: Copy systemd-resolved restore script
  ansible.builtin.copy:
    src: restore_systemd_resolved_dns.py
    dest: /etc/openvpn/client/restore_systemd_resolved_dns.py
    owner: root
    group: root
    mode: '0755'
  become: yes

- name: Make sure '/etc/systemd/system/openvpn-client@purevpn.service.d' directory exists
  file:
    path: /etc/systemd/system/openvpn-client@purevpn.service.d
    state: directory
    mode: 0755
    owner: root
    group: root
  become: true

- name: Create override file for 'openvpn-client@purevpn' service
  copy:
    content: |
      # Generated by Ansible at {{ lookup('pipe', 'hostname -f') }}
      # Any changes made here will be overwritten
      [Service]
      ExecStartPre=/etc/openvpn/client/restore_systemd_resolved_dns.py
    dest: /etc/systemd/system/openvpn-client@purevpn.service.d/override.conf
    mode: 0644
  become: true
  notify: Run daemon-reload for systemd

- name: Enable and start 'openvpn-client@purevpn' service
  ansible.builtin.systemd:
    name: openvpn-client@purevpn.service
    state: started
    enabled: yes
  become: yes
