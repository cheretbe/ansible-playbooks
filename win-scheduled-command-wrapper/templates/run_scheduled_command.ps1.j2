[CmdletBinding()]
param()

Set-StrictMode -Version Latest
$ErrorActionPreference = [System.Management.Automation.ActionPreference]::Stop

$taskTempDir = "{{ task_temp_dir.path }}"
$taskName = "{{ win_scheduled_task_name }}"

$pipeName = ("\\.\pipe\{0}" -f $taskName)

Write-Verbose ("Creating named pipe '{0}'" -f $pipeName)
$pipe = New-Object System.IO.Pipes.NamedPipeServerStream(
  $pipeName,
  [System.IO.Pipes.PipeDirection]::In,
  # maxNumberOfServerInstances
  1,
  [System.IO.Pipes.PipeTransmissionMode]::Byte,
  [System.IO.Pipes.PipeOptions]::Asynchronous
)

Write-Verbose ("Starting sheduled task '{0}'" -f $taskName)
# Windows 2008R2 doesn't have Start-ScheduledTask even with PS 5 installed
# Start-ScheduledTask -TaskName $taskName
& "C:\Windows\System32\schtasks.exe" /Run /TN $taskName | Out-Null
if ($LASTEXITCODE -ne 0)
  { throw ("schtasks.exe exited with exit code {0}" -f $LASTEXITCODE) }

Write-Verbose ("Waiting for the sheduled task '{0}' to connect back" -f $taskName)
$waitAsync = $pipe.BeginWaitForConnection($NULL, $NULL)
# 3 min
$waitAsync.AsyncWaitHandle.WaitOne(180000) | Out-Null
if (-not $waitAsync.IsCompleted) {
    throw "Timeout while waiting for child process to connect to named pipe"
}
$pipe.EndWaitForConnection($waitAsync)
Write-Verbose "Connected"

$schCmdExitCode = $NULL

$pipeReader = new-object System.IO.StreamReader($pipe)
while ($pipe.IsConnected) {
  $pipe_data = $pipeReader.ReadLine()
  if ($NULL -ne $pipe_data) {
    if ($pipe_data.StartsWith("SCH_CMD_EXIT_CODE:")) {
      $schCmdExitCode = [int]($pipe_data.Split(":")[1])
    } else {
      Write-Output $pipe_data
    } #if
  } #if
} # while
Write-Verbose "Diconnected from the scheduled task"

if ($NULL -eq $schCmdExitCode)
  { throw "Failed to get scheduled command exit code" }

Write-Verbose ("schCmdExitCode: {0}" -f $schCmdExitCode)
exit $schCmdExitCode
