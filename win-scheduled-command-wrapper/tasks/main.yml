---
# tasks file for win-scheduled-command-wrapper

- name: Check if 'win_scheduled_command_wrapper_password' variable is defined
  fail:
    msg: "Variable 'win_scheduled_command_wrapper_password' must be defined"
  when: not win_scheduled_command_wrapper_password is defined

- name: Check if 'win_scheduled_command' variable is defined
  fail:
    msg: "Variable 'win_scheduled_command' must be defined"
  when: not win_scheduled_command is defined

- name: Create temporary directory
  win_tempfile:
    state: directory
  register: task_temp_dir

# - name: Debug 1
#   set_fact:
#     task_temp_dir:
#       path: C:\Users\vagrant\AppData\Local\Temp\Debug

# - name: Debug 2
#   win_file:
#     path: "{{ task_temp_dir.path }}"
#     state: directory

- name: Generate scheduled task name
  set_fact:
    win_scheduled_task_name: "ansible_{{ 99999999 | random | to_uuid }}"

- name: Upload temporary runner script
  win_template:
    src: run_scheduled_command.ps1.j2
    dest: "{{ task_temp_dir.path }}\\run_scheduled_command.ps1"

- name: Upload temporary wrapper script
  win_template:
    src: scheduled_command_wrapper.ps1.j2
    dest: "{{ task_temp_dir.path }}\\scheduled_command_wrapper.ps1"

- name: Create scheduled task
  win_scheduled_task:
    name: "{{ win_scheduled_task_name }}"
    description: Ansible PowerShell script wrapper helper
    actions:
    - path: C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe
      arguments: '-ExecutionPolicy Bypass -NonInteractive -File "{{ task_temp_dir.path }}\scheduled_command_wrapper.ps1"'
    username: vagrant
    password: "{{ win_scheduled_command_wrapper_password }}"
    logon_type: password
    run_level: highest
    state: present

- name: Execute runner script with cleanup
  block:
    - name: Execute runner script
      win_command: 'C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -ExecutionPolicy Bypass -NonInteractive -File "{{ task_temp_dir.path }}\\run_scheduled_command.ps1"'
  always:
    - name: Remove temporary directory
      win_file:
        path: "{{ task_temp_dir.path }}"
        state: absent

- debug:
    msg: There you go