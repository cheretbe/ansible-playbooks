---
# tasks file for backuppc-server

- name: Check if distribution is supported
  ansible.builtin.set_fact:
    _backuppc_server_supported_dist: true
  when:
    - item.distribution == ansible_distribution and item.version == ansible_distribution_version
  loop:
    - { distribution: "Ubuntu", version: "18.04" }
    - { distribution: "Ubuntu", version: "20.04" }
    - { distribution: "Ubuntu", version: "22.04" }

- name: Fail on not supported distributions
  ansible.builtin.fail:
    msg: >-
      {{ ansible_distribution }} {{ ansible_distribution_version }} is not supported.
      Use 'backuppc_server_skip_dist_check' setting to skip the check
  when: not ((_backuppc_server_supported_dist is defined) or (backuppc_server_skip_dist_check is defined))

- name: Install dependencies
  apt:
    name: ["apache2", "apache2-utils", "libapache2-mod-perl2", "smbclient",
           "rrdtool", "libarchive-zip-perl", "libfile-listing-perl",
           "libxml-rss-perl", "libcgi-session-perl", "make", "gcc", "par2",
           "libacl1", "libacl1-dev",
           #  this is for Ansible's htpasswd module
           "python3-passlib"]
    update_cache: true
    cache_valid_time: "{{ '1d' | community.general.to_seconds | int }}"
    lock_timeout: "{{ '15m' | community.general.to_seconds | int }}"
  become: true

- name: Setup server user
  include_tasks: setup_user.yml

- name: Populate service facts
  service_facts:
  become: true

- name: Check if 'backuppc' service is present
  set_fact:
    backuppc_service_is_present: "{{ True if ('backuppc.service' in ansible_facts.services) else False }}"

- name: Install BackupPC-XS
  include_tasks: install_backuppc_xs.yml

- name: Install Rsync-bpc
  include_tasks: install_rsync_bpc.yml

- name: Install BackupPC
  include_tasks: install_backuppc.yml

- name: "Remove temporary build directory"
  file:
    state: absent
    path: "{{ backuppc_build_dir.path }}"
  become: true
  when: backuppc_build_dir.path is defined

- name: Set group name in /etc/systemd/system/backuppc.service
  ini_file:
    path: /etc/systemd/system/backuppc.service
    section: Service
    option: Group
    value: "{{ backuppc_server_user_name }}"
    no_extra_spaces: true
    mode: 0644
  become: true


- name: Update ownership on /etc/BackupPC
  file:
    dest: /etc/BackupPC
    owner: "{{ backuppc_server_user_name }}"
    group: "{{ backuppc_server_user_name }}"
    recurse: true
  become: true

- name: Set user list CgiAdminUsers parameter
  set_fact:
    backuppc_cgi_admin_users: "{{ backuppc_cgi_admin_users }} + [ '{{ item.user_name }}' ]"
  with_items: "{{ backuppc_server_www_users }}"
  vars:
    backuppc_cgi_admin_users: []
  no_log: true

- name: Update CgiAdminUsers parameter in /etc/BackupPC/config.pl
  lineinfile:
    path: /etc/BackupPC/config.pl
    regexp: "^\\$Conf\\{CgiAdminUsers\\}[ ]*=[ ]*'.*';"
    line: "$Conf{CgiAdminUsers} = '{{ backuppc_cgi_admin_users | join(' ') }}';"
    backup: true
  become: true

- name: Start 'backuppc' service
  systemd:
    name: backuppc
    state: started
    enabled: true
    daemon_reload: true
  become: true

- name: Configure Apache
  include_tasks: configure_apache.yml
