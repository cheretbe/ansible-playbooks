---
# tasks file for backuppc-client-rsync

- name: Check if password for backuppc user is defined
  fail:
    msg: "Variable 'backuppc_client_rsync_password' must be defined"
  when: not backuppc_client_rsync_password is defined

- name: Install APT packages
  apt:
    name: ["net-tools", "rsync"]
    update_cache: yes
    # 1 hour
    cache_valid_time: 3600
  become: yes
  when: ansible_os_family == "Debian"

- name: Set package names for CentOS 8
  set_fact:
    backuppc_client_rsync_centos_packages: ["net-tools", "rsync", "rsync-daemon"]
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "8"

- name: Install YUM packages
  yum:
    name: "{{ backuppc_client_rsync_centos_packages }}"
    state: present
  become: yes
  when: ansible_os_family == "RedHat"

- name: Create '/etc/rsyncd.conf' file
  template:
    src: etc_rsyncd.conf.j2
    dest: /etc/rsyncd.conf
    owner: root
    group: root
    mode: '0644'
    backup: yes
  become: yes
  # notify is not needed, as the daemon re-reads the config file whenever a client connects

- name: Create '/etc/rsyncd.secrets' file
  ansible.builtin.copy:
    content: |
      {{ backuppc_client_rsync_user_name }}:{{ backuppc_client_rsync_password }}
    dest: /etc/rsyncd.secrets
    owner: root
    group: root
    mode: '0600'
  become: yes

- name: Set daemon name to 'rsyncd' on CentOS
  set_fact:
    backuppc_client_rsync_daemon_name: rsyncd
  when: ansible_os_family == "RedHat"

- name: Enable and start rsync service
  systemd:
    name: "{{ backuppc_client_rsync_daemon_name }}"
    state: started
    enabled: yes
  become: yes
