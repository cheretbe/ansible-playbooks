---
# tasks file for ansible-awx-prerequisites

- name: Check distribution
  fail:
    msg: "Only Ubuntu 18.04 is supported at the moment"
  when: not (ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04")

- name: Add docker repository key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add docker repository
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
    state: present

- name: Update and upgrade apt packages
  become: yes
  apt:
    upgrade: "yes"
    update_cache: yes
    # Fix for warning message "Could not find aptitude. Using apt-get instead"
    force_apt_get: yes

- name: Install needed packages
  apt:
    name: [docker-ce, python3-pip, nodejs, npm]
    # Fix for warning message "Could not find aptitude. Using apt-get instead"
    force_apt_get: yes
    update_cache: no

- name: Install PIP Docker packages
  pip:
    name: [docker, docker-compose]

- name: Update NPM
  npm:
    name: npm
    state: latest
    global: yes

- name: Get Docker info
  docker_host_info:
    containers: yes
  register: dockerHostInfo

- name: Get Docker container list
  set_fact:
    all_docker_containers: "{{ all_docker_containers + [(item)] }}"
  with_items: "{{ dockerHostInfo.containers | map(attribute='Names') | list }}"

- name: Filter Docker container list
  set_fact:
    existing_awx_docker_containers: "{{ all_docker_containers | intersect(awx_docker_containers) }}"

- name: Check if AWX is installed
  set_fact:
    ansible_awx_installed: "{{ existing_awx_docker_containers | length != 0 }}"

- name: Get currently installed AWX version
  shell: 'docker exec awx_task /usr/bin/awx-manage version'
  # shell: echo "4.3.1"
  changed_when: false
  register: installed_awx_version

- name: Check if AWX needs an upgrade
  set_fact:
    awx_needs_upgrade: "{{ installed_awx_version.stdout is version (ansible_awx_version, '<') }}"

- block:
  - name: Exit if AWX does not need an upgrade
    fail:
      msg: >-
        AWX {{ installed_awx_version.stdout }} does not need an upgrade to
        version {{ ansible_awx_version }}
    when: not awx_needs_upgrade

  - name: Confirm upgrade
    pause:
      prompt: >-
        AWX is already installed. Do you want to perform an in-place upgrade
        from version {{ installed_awx_version.stdout }} to version
        {{ ansible_awx_version }}?
      echo: yes
    register: ansible_awx_upgrade
    when: not (ansible_awx_force_upgrade|bool)

  - name: Set confirmation if upgrade is forced
    set_fact:
      ansible_awx_upgrade: { user_input: True}
    when: ansible_awx_force_upgrade|bool

  - name: Check user input
    fail:
      msg: "Cancelled by user"
    when: not ansible_awx_upgrade.user_input|bool

  when: ansible_awx_installed

- name: Download https://github.com/ansible/awx/archive/{{ ansible_awx_version }}.tar.gz
  get_url:
    url: "https://github.com/ansible/awx/archive/{{ ansible_awx_version }}.tar.gz"
    dest: /tmp/awx-{{ ansible_awx_version }}.tar.gz

- name: Extract awx-{{ ansible_awx_version }}.tar.gz
  unarchive:
    src: /tmp/awx-{{ ansible_awx_version }}.tar.gz
    dest: /tmp

- name: Create 'opt/awx' directory
  file:
    path: /opt/awx
    state: directory

- name: Set custom options in '/opt/awx/install-options.yml'
  template:
    src: install-options.yml.j2
    dest: /opt/awx/install-options.yml
    backup: true

# - name: Cancel
#   fail:
#     msg: "Debug"

- name: >-
    {% if ansible_awx_installed %}Upgrade{%else%}Install{%endif%}
    AWX using the following command"
  debug:
    msg: >-
      ansible-playbook
      /tmp/awx-{{ ansible_awx_version }}/installer/install.yml
      -i /tmp/awx-{{ ansible_awx_version }}/installer/inventory
      -e @/opt/awx/install-options.yml
